name: Build and Deploy

# Run the deployment only when code is committed to teh branch.
on:
  push:
    branches:
      - development
      - next-release

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ${{ env.GITHUB_WORKSPACE }}/node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Build
      run: npm install && grunt release-no-clean

    - name: Set environment name
      run: |
          if [ '${{github.ref}}' = 'refs/heads/development' ]
          then
            echo "ENVIRONMENT=DEVELOPMENT" >> $GITHUB_ENV
          fi
          if [ '${{github.ref}}' = 'refs/heads/next-release' ]
          then
            echo "ENVIRONMENT=NEXT_RELEASE" >> $GITHUB_ENV
          fi
          if [ '${{github.ref}}' = 'refs/heads/release-candidate' ]
          then
            echo "ENVIRONMENT=RELEASE_CANDIDATE" >> $GITHUB_ENV
          fi

    - name: Rsync Deployment
      uses: burnett01/rsync-deployments@4.1
      with:
        switches: -avzr --delete
        path: astra/*
        remote_path: ${{ secrets[format('SSH_PATH_{0}', env.ENVIRONMENT)] }}
        remote_host: ${{ secrets.SSH_HOST }}
        remote_user: ${{ secrets.SSH_USERNAME }}
        remote_key: ${{ secrets.SSH_KEY }}

    - name: Cleanup
      run: rm -rf astra/
